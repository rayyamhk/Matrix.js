const Matrix = require('../..');

describe('should be upper triangular matrix', () => {
  const matrices = [
    [],
    [
      [0],
    ],
    [
      [1, 2, 3, 4, 5, 6, 7],
    ],
    [
      [1],
      [0],
      [0],
      [0],
      [0],
    ],
    [
      [1, 2],
      [0, 3],
    ],
    [
      [1, 0],
      [0, 1],
    ],
    [
      [0, 0],
      [0, 0],
    ],
    [
      [1, 2, 3],
      [0, 4, 5],
      [0, 0, 6],
    ],
    [
      [0, 0, 0],
      [0, 0, 0],
      [0, 0, 0],
    ],
    [
      [1, 0, 0],
      [0, 5, 0],
      [0, 0, 7],
    ],
    [
      [1, 0, 1],
      [0, 1, 0],
      [0, 0, 1],
    ],
    [
      [6, 0, 1, 5],
      [0, -5, 4, 7],
      [0, 0, 1, 2],
    ],
    [
      [6, 0, 1, 5, 5],
      [0, -5, 4, 7, 1],
      [0, 0, 1, 2, 9],
    ],
    [
      [6, 0, 1, 5, 5],
      [0, -5, 4, 7, 1],
      [0, 0, 1, 2, 9],
      [0, 0, 0, 2, 9],
    ],
    [
      [1, 2],
      [0, 3],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    [
      [1, 0, 0],
      [0, 5, 0],
      [0, 0, 7],
      [0, 0, 0],
      [0, 0, 0],
    ],
  ];
  matrices.forEach((matrix, idx) => {
    it(`test ${idx + 1}: should be true`, () => {
      expect.hasAssertions();
      const received = new Matrix(matrix).isUpperTriangular();
      expect(received).toBe(true);
    });
  });
});

describe('should not be upper triangular matrix', () => {
  const matrices = [
    [
      [1],
      [0],
      [1],
      [0],
      [0],
    ],
    [
      [1, 2],
      [5, 3],
    ],
    [
      [1, 0],
      [1, 1],
    ],
    [
      [0, 0, 0, 0, 0],
      [1, 0, 0, 0, 0],
    ],
    [
      [1, 2, 3],
      [0, 4, 5],
      [4, 0, 6],
    ],
    [
      [0, 0, 0],
      [0, 0, 0],
      [2, 0, 0],
    ],
    [
      [1, 0, 0],
      [0, 0, 0],
      [1, 0, 1],
    ],
    [
      [6, 0, 1, 5],
      [0, -5, 4, 7],
      [1, 0, 1, 2],
    ],
    [
      [6, 0, 1, 5, 5],
      [0, -5, 4, 7, 1],
      [0, 0, 1, 2, 9],
      [0, 1, 0, 2, 9],
    ],
    [
      [1, 2],
      [0, 3],
      [0, 0],
      [0, 0],
      [0, 1],
    ],
    [
      [1, 0, 0],
      [0, 5, 0],
      [0, 0, 7],
      [0, 1, 0],
      [0, 0, 0],
    ],
    [
      [0, 0, 0],
      [0, 0, 0],
      [0, 0, 0],
      [0, 0, 0],
      [1, 0, 0],
    ],
  ];
  matrices.forEach((matrix, idx) => {
    it(`test ${idx + 1}: should be false`, () => {
      expect.hasAssertions();
      const received = new Matrix(matrix).isUpperTriangular();
      expect(received).toBe(false);
    });
  });
});
